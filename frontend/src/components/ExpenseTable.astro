---
interface Props {
  expenses: Array<{
    id: number;
    date: string;
    vehicleId: number;
    category: string;
    amount: number;
    note: string;
  }>;
}

const { expenses } = Astro.props;

// Format date function
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "short",
    day: "numeric",
  });
}

// Format category function
function formatCategory(category: string): string {
  return category.charAt(0) + category.slice(1).toLowerCase();
}
---

<div class="rounded-lg border">
  <div class="border-t">
    <table class="w-full">
      <thead>
        <tr class="border-b bg-muted/50">
          <th class="h-12 px-4 text-left align-middle font-medium">Date</th>
          <th class="h-12 px-4 text-left align-middle font-medium">Vehicle</th>
          <th class="h-12 px-4 text-left align-middle font-medium">Category</th>
          <th class="h-12 px-4 text-left align-middle font-medium">Amount</th>
          <th class="h-12 px-4 text-left align-middle font-medium">Note</th>
          <th class="h-12 px-4 text-right align-middle font-medium">Actions</th>
        </tr>
      </thead>
      <tbody>
        {
          expenses.map((expense) => (
            <tr class="border-b">
              <td class="p-4">{formatDate(expense.date)}</td>
              <td class="p-4">Vehicle #{expense.vehicleId}</td>
              <td class="p-4">{formatCategory(expense.category)}</td>
              <td class="p-4">${expense.amount.toFixed(2)}</td>
              <td class="p-4">{expense.note || "-"}</td>
              <td class="p-4 text-right">
                <a
                  href={`/edit-expense/${expense.id}`}
                  class="text-sm text-muted-foreground hover:text-foreground"
                >
                  Edit
                </a>
              </td>
            </tr>
          ))
        }
      </tbody>
    </table>
  </div>
</div>

---
import type { Vehicle } from "../lib/api/vehicles";

interface Props {
  initialSearch?: string;
  categories: string[];
  initialCategory?: string;
  initialVehicleId?: number;
  vehicles: Vehicle[];
}

const {
  initialSearch = "",
  initialCategory = "",
  initialVehicleId,
  vehicles,
} = Astro.props;

const categories = [
  "Fuel",
  "Maintenance",
  "Insurance",
  "Registration",
  "Tires",
  "Other",
];

const formatVehicleLabel = (vehicle: Vehicle) => {
  return `${vehicle.year} ${vehicle.make} ${vehicle.model} (${vehicle.licensePlate})`;
};
---

<form id="filters" class="space-y-4">
  <div>
    <label for="search" class="block text-sm font-medium text-gray-700"
      >Search</label
    >
    <input
      type="text"
      id="search"
      name="search"
      value={initialSearch}
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      placeholder="Search expenses..."
    />
  </div>

  <div>
    <label for="category" class="block text-sm font-medium text-gray-700"
      >Category</label
    >
    <select
      id="category"
      name="category"
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
    >
      <option value="">All Categories</option>
      {
        categories.map((category) => (
          <option value={category} selected={category === initialCategory}>
            {category}
          </option>
        ))
      }
    </select>
  </div>

  <div>
    <label for="vehicleId" class="block text-sm font-medium text-gray-700"
      >Vehicle</label
    >
    <select
      id="vehicleId"
      name="vehicleId"
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
    >
      <option value="">All Vehicles</option>
      {
        vehicles.map((vehicle) => (
          <option value={vehicle.id} selected={vehicle.id === initialVehicleId}>
            {formatVehicleLabel(vehicle)}
          </option>
        ))
      }
    </select>
  </div>

  <button
    type="submit"
    class="inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
  >
    Apply Filters
  </button>
</form>

<script>
  const form = document.getElementById("filters") as HTMLFormElement;
  const searchInput = document.getElementById("search") as HTMLInputElement;
  const categorySelect = document.getElementById(
    "category"
  ) as HTMLSelectElement;
  const vehicleSelect = document.getElementById(
    "vehicleId"
  ) as HTMLSelectElement;

  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const params = new URLSearchParams();

    if (searchInput.value) {
      params.append("search", searchInput.value);
    }

    if (categorySelect.value) {
      params.append("category", categorySelect.value);
    }

    if (vehicleSelect.value) {
      params.append("vehicleId", vehicleSelect.value);
    }

    const queryString = params.toString();
    window.location.href = queryString ? `?${queryString}` : "/";
  });
</script>

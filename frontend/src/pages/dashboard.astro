---
import Layout from "../layouts/Layout.astro";
import { getExpenses } from "../lib/api/expenses";
import { getVehicles } from "../lib/api/vehicles";
import type { Expense } from "../types/expense";
import type { Vehicle } from "../types/vehicle";
import { formatCurrency, formatVehicleLabel } from "../lib/format";

// Initialize variables
let expenses: Expense[] = [];
let vehicles: Vehicle[] = [];
let error: string | null = null;
let isLoading = true;

// Fetch data from API
try {
  // Fetch all expenses for the dashboard
  const expensesResult = await getExpenses({ limit: 100 });
  expenses = expensesResult.expenses;
  
  // Fetch vehicles
  vehicles = await getVehicles();
  
  isLoading = false;
} catch (e) {
  error = e instanceof Error ? e.message : "An unknown error occurred";
  isLoading = false;
}

// Calculate statistics
const totalExpenses = expenses.reduce((sum, expense) => sum + expense.amount, 0);
const expensesByCategory = expenses.reduce((acc, expense) => {
  const category = expense.category;
  acc[category] = (acc[category] || 0) + expense.amount;
  return acc;
}, {} as Record<string, number>);

const expensesByVehicle = expenses.reduce((acc, expense) => {
  const vehicleId = expense.vehicleId;
  acc[vehicleId] = (acc[vehicleId] || 0) + expense.amount;
  return acc;
}, {} as Record<string, number>);

// Get vehicle names
const vehicleNames = vehicles.reduce((acc, vehicle) => {
  acc[vehicle.id] = formatVehicleLabel(vehicle);
  return acc;
}, {} as Record<string, string>);
---

<Layout title="Dashboard">
  <div class="space-y-6">
    <div class="flex items-center justify-between">
      <h1 class="text-3xl font-bold">Dashboard</h1>
      <a
        href="/expenses"
        class="inline-flex h-10 items-center justify-center rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground transition-colors hover:bg-primary/90"
      >
        View All Expenses
      </a>
    </div>

    {isLoading ? (
      <div class="py-12 text-center">
        <p class="text-muted-foreground">Loading dashboard data...</p>
      </div>
    ) : error ? (
      <div class="p-4">
        <div class="rounded-md bg-destructive/15 p-4 text-destructive">
          <p>{error}</p>
        </div>
      </div>
    ) : (
      <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        <!-- Total Expenses Card -->
        <div class="rounded-lg border p-6">
          <h2 class="text-lg font-medium">Total Expenses</h2>
          <p class="mt-2 text-3xl font-bold">{formatCurrency(totalExpenses)}</p>
        </div>

        <!-- Expenses by Category Card -->
        <div class="rounded-lg border p-6">
          <h2 class="text-lg font-medium">Expenses by Category</h2>
          <div class="mt-4 space-y-2">
            {Object.entries(expensesByCategory).map(([category, amount]) => (
              <div class="flex items-center justify-between">
                <span class="capitalize">{category}</span>
                <span class="font-medium">{formatCurrency(amount)}</span>
              </div>
            ))}
          </div>
        </div>

        <!-- Expenses by Vehicle Card -->
        <div class="rounded-lg border p-6">
          <h2 class="text-lg font-medium">Expenses by Vehicle</h2>
          <div class="mt-4 space-y-2">
            {Object.entries(expensesByVehicle).map(([vehicleId, amount]) => (
              <div class="flex items-center justify-between">
                <span>{vehicleNames[vehicleId] || `Vehicle #${vehicleId}`}</span>
                <span class="font-medium">{formatCurrency(amount)}</span>
              </div>
            ))}
          </div>
        </div>

        <!-- Recent Expenses Card -->
        <div class="col-span-full rounded-lg border p-6">
          <h2 class="text-lg font-medium">Recent Expenses</h2>
          <div class="mt-4 overflow-x-auto">
            <table class="w-full">
              <thead>
                <tr class="border-b bg-muted/50">
                  <th class="h-12 px-4 text-left align-middle font-medium">Date</th>
                  <th class="h-12 px-4 text-left align-middle font-medium">Vehicle</th>
                  <th class="h-12 px-4 text-left align-middle font-medium">Category</th>
                  <th class="h-12 px-4 text-left align-middle font-medium">Amount</th>
                </tr>
              </thead>
              <tbody>
                {expenses.slice(0, 5).map((expense) => (
                  <tr class="border-b">
                    <td class="p-4">{expense.date}</td>
                    <td class="p-4">{vehicleNames[expense.vehicleId] || `Vehicle #${expense.vehicleId}`}</td>
                    <td class="p-4 capitalize">{expense.category}</td>
                    <td class="p-4">{formatCurrency(expense.amount)}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    )}
  </div>
</Layout>
